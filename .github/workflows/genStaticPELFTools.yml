name: Build and Release PELF tooling as a single-file executable
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: "0 14 * * 0"
  workflow_dispatch:

jobs:
  build:
    name: Build tooling
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: "alpine:latest"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add non-compliant tools, because sucky software requires sucky software #- name: Remove non-compliant tools
        run: |
          #apk del bash findutils gawk grep diffutils coreutils
          apk add git bash file binutils patchelf findutils grep sed coreutils strace
          # Add good stuff
          apk add go fuse3 fuse

      - name: Set up GOBIN and install lib4bin
        run: |
          set -x
          export GOBIN="$GITHUB_WORKSPACE/.local/bin" CGO_ENABLED=0 GO_LDFLAGS='-buildmode=static-pie' GOFLAGS='-ldflags=-static-pie -ldflags=-s -ldflags=-w'
          export DBIN_INSTALL_DIR="$GOBIN"
          mkdir -p "$GOBIN"
          echo "DBIN_INSTALL_DIR=$DBIN_INSTALL_DIR" >> $GITHUB_ENV
          echo "GOBIN=$GOBIN" >> $GITHUB_ENV
          echo "PATH=$GOBIN:$PATH" >> $GITHUB_ENV
          git clone --depth 1 --branch dev https://github.com/xplshn/pelf
          cp ./pelf/pelf* "$GOBIN" || true
          cd ./pelf/cmd/misc/appstream_helper
          go install .
          cd ../../../standaloneRuntimes/go
          go build
          strip ./appbundle-runtime
          mv ./appbundle-runtime "$GOBIN"
          cd
          wget -qO- "https://raw.githubusercontent.com/xplshn/dbin/master/stubdl" | sh -s -- --install "/usr/local/bin/dbin" add sharun sharun-lib4bin squashfstools/mksquashfs squashfstools/unsquashfs squashfstools/sqfstar squashfstools/sqfscat squashfuse squashfuse_ll dwarfs-tools
          ln -sfT "$DBIN_INSTALL_DIR/dwarfs-tools" "$DBIN_INSTALL_DIR/dwarfs"
          ln -sfT "$DBIN_INSTALL_DIR/dwarfs-tools" "$DBIN_INSTALL_DIR/mkdwarfs"
          mv "$DBIN_INSTALL_DIR/sharun-lib4bin" "$DBIN_INSTALL_DIR/lib4bin"
          echo "WITH_SHARUN=1" >> $GITHUB_ENV
          echo "GEN_LIB_PATH=1" >> $GITHUB_ENV
          echo "ANY_EXECUTABLE=1" >> $GITHUB_ENV
          echo "_VAR_CUSTOM_RUNTIME=$GOBIN/appbundle-runtime" >> $GITHUB_ENV
          echo "APPBUNDLE_FS=${{ github.event.inputs.appbundle_fs }}" >> $GITHUB_ENV

      - name: Create AppDir
        run: |
          mkdir "$GITHUB_WORKSPACE/dist"
          cd "$GITHUB_WORKSPACE/dist"
          pelfCreator -m "pkgforge-dev_xplshn" -n "pelf-toolchain" \
            -p "bash file binutils patchelf findutils grep sed coreutils strace" \
            -x "usr/bin/strip
                usr/bin/strace
                usr/bin/grep
                usr/bin/sed
                usr/bin/find
                usr/bin/file
                usr/bin/objcopy
                usr/bin/bash
                usr/bin/diff
                usr/bin/patch
                usr/bin/patchelf" \
              -e "pelf-dwfs" \
              -z
          APPDIR="$(echo pelf-toolchain*.AppDir)"
          cp $DBIN_INSTALL_DIR/* "$APPDIR/bin"
          # Create the actual AppBundle:
          "$APPDIR/.gen"
          mv ./pelf-toolchain*.AppBundle ./pelf-toolchain.dwfs.AppBundle

      - name: Set version
        run: |
          head -n 1 version
          export VERSION="$(head -n 1 version)"
          echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: AppBundle
          path: dist/*.AppBundle*

      - name: Upload version file
        uses: actions/upload-artifact@v4.6.0
        with:
          name: version
          path: version

      - name: Create Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          name: "${{ env.APP_VERSION }}"
          tag_name: "${{ env.APP_VERSION }}"
          prerelease: ${{ env.prerelease }}
          draft: false
          generate_release_notes: true
          make_latest: true
          files: |
            ${{ github.workspace }}/dist/*.AppBundle*
        continue-on-error: true
